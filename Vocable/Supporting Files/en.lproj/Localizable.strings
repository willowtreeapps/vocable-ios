/* Delete phrase alert cancel button title */
"category_editor.alert.delete_phrase_confirmation.button.cancel.title" = "Cancel";

/* Delete phrase alert action button title */
"category_editor.alert.delete_phrase_confirmation.button.delete.title" = "Remove";

/* Delete phrase confirmation alert title */
"category_editor.alert.delete_phrase_confirmation.title" = "Deleted phrases cannot be recovered.";

/* Delete category alert cancel button title */
"category_editor.alert.delete_category_confirmation.button.cancel.title" = "Cancel";

/* Delete category alert action button title */
"category_editor.alert.delete_category_confirmation.button.remove.title" = "Remove";

/* Delete category confirmation alert title */
"category_editor.alert.delete_category_confirmation.title" = "Deleted categories cannot be recovered.";

/* changes to an existing phrase were saved successfully */
"category_editor.toast.changes_saved.title" = "Changes saved";

/* Cancel alert action title */
"gaze_settings.alert.disable_head_tracking_confirmation.button.cancel.title" = "Cancel";

/* Confirm alert action title */
"gaze_settings.alert.disable_head_tracking_confirmation.button.confirm.title" = "Continue";

/* Disable head tracking confirmation alert title */
"gaze_settings.alert.disable_head_tracking_confirmation.title" = "Turning off head tracking will make the app touch mode only. Would you like to continue?";

/* Warning message presented to the user when the head tracking system */
"gaze_tracking.error.excessive_head_distance.title" = "Please move closer to the device.";

/* Select something below to speak Hint Text */
"main_screen.textfield_placeholder.default" = "Select something below to speak";

/* Page indicator progress format. \"Page x of n\" */
"paging_progress_indicator_format" = "Page %1$d of %2$d";

/* new entry saved to user favorites category
   Saved to user favorites category
   Saved to user favorites category toast title */
"phrase_editor.toast.successfully_saved_to_favorites.title_format" = "Saved to %@";

/* 'No' num pad response */
"preset.category.numberpad.phrase.no.title" = "No";

/* 'Yes' num pad response */
"preset.category.numberpad.phrase.yes.title" = "Yes";

/* Add phrase to category button title */
"preset.category.add.phrase.title" = "Add Phrase";

/* No email account configured error alert dismiss button title */
"settings.alert.no_email_configured.button.dismiss.title" = "OK";

/* No email account configured error alert title */
"settings.alert.no_email_configured.title" = "Please sign into an account with Mail for %1$@.";

/* body of alert presented when user is about to navigate away from the head tracking-navigable portion of the app */
"settings.alert.surrender_gaze_confirmation.body" = "You're about to leave the Vocable app. You may lose head tracking control.";

/* Button cancelling the action that would have taken them away from the head tracking-navigable portion of the app */
"settings.alert.surrender_gaze_confirmation.button.cancel.title" = "Cancel";

/* Button confirming that the user would like to navigate away from the head tracking-navigable portion of the app */
"settings.alert.surrender_gaze_confirmation.button.confirm.title" = "Confirm";

/* edit user's favorite phrases category settings menu item */
"settings.cell.edit_user_favorites.title_format" = "Edit %@";


// MARK: Settings Screen Options strings

/* Settings screen header title */
"settings.header.title" = "Settings";

/* edit categories settings menu item */
"settings.cell.categories.title" = "Categories and Phrases";

/* edit cursor timing and sensititivy settings menu item */
"settings.cell.timing_sensitivity.title" = "Timing and Sensitivity";

/* reset all settings menu item */
"settings.cell.reset_all.title" = "Reset App Settings";

/* Listening Mode root settings menu item. Navigates the user to the Listening Mode settings screen where they can configure their preferences for listening mode. */
"settings.cell.listening_mode.title" = "Listening Mode";

/* edit cursor selection mode settings menu item */
"settings.cell.selection_mode.title" = "Selection Mode";

/* tune cursor debug settings menu item */
"settings.cell.tune_cursor.title" = "Tune Cursor";

/* view privacy policy settings menu item */
"settings.cell.privacy_policy.title" = "Privacy Policy";

/* contact developers settings menu item */
"settings.cell.contact_developers.title" = "Contact Developers";


// MARK: Category Settings Strings

/* Categories Header title.  This text appears in the Settings flow when navigating to the list of Categories*/
"categories_list_editor.header.title" = "Categories";

/* Setting option for a category.  Navigates the user to a keyboard view where they can edit the Category name. */
"category_editor.detail.button.rename_category.title" = "Rename Category";

/* Toggle option for a category within settings.  Can be toggled on or off to hide or show the category in the main view.  Hiding the category will also move the category in settings to the end of the list. */
"category_editor.detail.button.show_category.title" = "Show Category";

/* Setting option for a category.  Navigates the user to a list of phrases within the category where the phrases can be deleted or edited. */
"category_editor.detail.button.edit_phrases.title" = "Edit Phrases";

/* Setting option for a category.  Button that will delete the category.  Tapping the button will display an alert confirmation. */
"category_editor.detail.button.remove_category.title" = "Remove Category";


// MARK: Edit Category and Phrases Alerts

/* Toast message that appears after saving edits made to the Category title */
"category_editor.toast.successfully_saved.title" = "Changes Saved";

/* Category close confirmation text.  This text appears in an alert when there are edits made to the Category title and the user tries to close the keyboard without saving the changes. */
"text_editor.alert.cancel_editing_confirmation.title" = "If you close without saving, your changes will be lost.";

/* Button in the edit category title close confirmation.  This buton appears in an alert when there are edits made to the Category title and the user tries to close the keyboard without saving the changes.
   Pressing the button will allow editing the category title. */
"text_editor.alert.cancel_editing_confirmation.button.continue_editing.title" = "Continue Editing";

/* Button in the edit category title close confirmation.  This buton appears in an alert when there are edits made to the Category title and the user tries to close the keyboard without saving the changes.
   Pressing the button will not save any changes and close the keyboard view. */
"text_editor.alert.cancel_editing_confirmation.button.discard.title" = "Discard";

/* Duplicate Category alert text.  This text appears in an alert when a category is created with the same title as an existing category. */
"text_editor.alert.category_name_exists.title" = "This category name already exists. Would you like to create a duplicate?";

/* Duplicate Category alert cancel button.  Text on this button appears on an alert where a duplicate category title is being created.
   Pressing the button will allow continuing to edit category title */
"text_editor.alert.category_name_exists.cancel.button" = "Cancel";

/* Duplicate Alert create duplicate button.  Pressing this button will allow for multiple categories with the same title. */
"text_editor.alert.category_name_exists.create.button" = "Create Duplicate";



// MARK: Category_editor.alert.cancel... doesn't seem to be used anywhere.

"category_editor.alert.cancel_editing_confirmation.title" = "If you close without saving, your changes will be lost.";

"category_editor.alert.cancel_editing_confirmation.button.confirm_exit.title" = "Confirm";

"category_editor.alert.cancel_editing_confirmation.button.cancel.title" = "Cancel";


// MARK: Edit Phrase Strings

/* Phrase editor close confirmation text.  This text appears in an alert when there are edits made to the Phrase and the user tries to close the keyboard without saving the changes. */
"phrase_editor.alert.cancel_editing_confirmation.title" = "If you close without saving, your changes will be lost.";

/* Button in the edit Phrase close confirmation.  This buton appears in an alert when there are edits made to the Phrase and the user tries to close the keyboard without saving the changes.
   Pressing the button will not save any changes and close the keyboard view. */
"phrase_editor.alert.cancel_editing_confirmation.button.discard.title" = "Discard";

/* Button in the Phrase close confirmation.  This buton appears in an alert when there are edits made to the Category title and the user tries to close the keyboard without saving the changes.
   Pressing the button will allow editing the category title. */
"phrase_editor.alert.cancel_editing_confirmation.button.continue_editing.title" = "Continue Editing";

/* Duplicate Phrase alert text.  This text appears in an alert when a phrase is created with the same text as an existing phrase within the same category. */
"phrase_editor.alert.phrase_name_exists.title" = "This phrase already exists. Would you like to create a duplicate?";

/* Duplicate Phrase alert cancel button.  Text on this button appears on an alert where a duplicate phrase is being created.
   Pressing the button will allow continuing to edit category title */
"phrase_editor.alert.phrase_name_exists.cancel.button" = "Cancel";

/* Duplicate Phrase alert create duplicate button.  Pressing this button will allow for multiple categories with the same title. */
"phrase_editor.alert.phrase_name_exists.create.button" = "Create Duplicate";


// MARK: Timing and Sensitivity Settings Strings

/* Timing and sensitivity Header title.  This text appears in the Settings flow when navigating into the Timing and Sensitivity setting*/
"timing_and_sensitivity.header.title" = "Timing and Sensitivity";

/* Text for a Timing and sensitivity setting.  This setting is the amount of time the head tracking cursor needs to stay on a button before it triggers it.
   Hove time can be adjusted in .5 sec increments from .5 to 5 */
"timing_and_sensitivity.cell.dwell_duration.title" = "Hover Time";

/* Text for a Timing and sensitivity setting.  This setting is the sensitivity for the head tracking cursor. */
"timing_and_sensitivity.cell.cursor_sensitivity.title" = "Cursor Sensitivity";

/* Button option for the Curson Sensitivity setting. */
"timing_and_sensitivity.button.low.title" = "Low";

/* Button option for the Curson Sensitivity setting. */
"timing_and_sensitivity.button.medium.title" = "Medium";

/* Button option for the Curson Sensitivity setting. */
"timing_and_sensitivity.button.high.title" = "High";


// MARK: Selection Mode Settings Strings

/* Selection mode setting header title*/
"selection_mode.header.title" = "Selection Mode";

/* Additonal footer text noting heading tracking compatibility */
"settings.selection_mode.head_tracking_unsupported_footer" = "This %1$@ on %2$@ %3$@ does not support head tracking.\n\nHead tracking is supported on all devices with a %4$@ camera, and on most devices with %6$@.";

/* Option within Selectin Mode.  This option is to enable to disable head tracking via a toggle. */
"settings.cell.head_tracking.title" = "Head Tracking";


// MARK: Category Empty State Strings

/* Recents empty state title string.  This will appear in the Recents Category if no phrases have been used yet. */
"recents_empty_state.header.title" = "No recently used phrases";

/* Recents empty state body string.  This will appear in the Recents Category if no phrases have been used yet. */
"recents_empty_state.body.title" = "Start using Vocable to see your most recently used phrases here.";

/* Category empty state.  This empty state appears when there are no phrases in the category in both the main screen and settings screen. */
"empty_state.header.title" = "You don't have any phrases saved yet.";

/* Category empty state button.  This button appears with the empty state to allow the user to add a phrase */
"empty_state.button.title" = "Add Phrase";


// MARK: Reset app settings strings

/* Reset setting alert confirmation prompt */
"settings.alert.reset_app_settings_confirmation.body" = "Are you sure you want to reset Vocable to default settings? This action cannot be undone.";

/* Reset setting alert Cancel button.  This will cancel the reset operation. */
"settings.alert.reset_app_settings_confirmation.button.cancel.title" = "Cancel";

/* Reset setting alert settings Reset button.  This will continue with the reset operation. */
"settings.alert.reset_app_settings_confirmation.button.confirm.title" = "Reset";

/* Reset app settings success alert */
"settings.alert.reset_app_settings_success.body" = "Vocable has been reset successfully.";

/* Button to dismiss the Reset app success alert */
"settings.alert.reset_app_settings_success.button.ok" = "OK";

/* Reset app settings failure alert */
"settings.alert.reset_app_settings_failure.body" = "Vocable failed to reset. Please try again or reinstall Vocable if the issue persists.";

/* Button to dismiss the Reset app failure alert */
"settings.alert.reset_app_settings_failure.button.ok" = "OK";


/* Listening Mode preferences screen title */
"settings.listening_mode.title" = "Listening Mode";

/* Footer text displayed in the Listening Mode preferences screen. This text describes the overall Listening Mode feature as well as the kinds of responses it can generate for the user. */
"settings.listening_mode.listening_mode_explanation_footer" = "When listening mode is enabled, anyone can ask a question out loud and Vocable will offer a selection of responses. Vocable supports either/or questions and questions that can be answered with yes, no, or a number.";

/* Footer text displayed in the Listening Mode preferences screen. This text describes the \"Hey Vocable\" feature, how it is activated, and how it automatically navigates the user to the Listening Mode screen. */
"settings.listening_mode.hotword_explanation_footer" = "When this shortcut is enabled, anyone can say \"Hey, Vocable\" to prompt the app to navigate to the listening mode screen.";

/* Footer text displayed in the Listening Mode preferences screen. This is only displayed if the user's device does not support Listening Mode because of it's language or lack of neural engine. */
"settings.listening_mode.device_unsupported_explanation_footer" = "This %1$@ on %2$@ %3$@ does not support Listening Mode.\n\nListening Mode is currently only available in English and requires %5$@ to be enabled.";

/* Title of Listening Mode preferences cell that toggles Listening Mode on or off when selected */
"settings.listening_mode.listening_mode_toggle_cell.title" = "Listening Mode";

/* Title of Listening Mode preferences cell that toggles \"Hey Vocable\" shortcut feature on or off when selected */
"settings.listening_mode.hot_word_toggle_cell.title" = "\"Hey Vocable\" shortcut";



// MARK: Listening Mode Empty State Titles

/* Listening mode empty state title for when microphone permissions are required, but the user has denied them */
"listening_mode.empty_state.microphone_permission_denied.title" = "Microphone Access";

/* Listening mode empty state title for when microphone permissions are required and the user has not been shown the system permissions prompt yet */
"listening_mode.empty_state.microphone_permission_undetermined.title" = "Microphone Access";

/* Listening mode empty state title for when speech recognition permissions are required, but the user has denied them */
"listening_mode.empty_state.speech_permission_denied.title" = "Speech Recognition";

/* Listening mode empty state title for when speech recognition permissions are required and the user has not been shown the system permissions prompt yet */
"listening_mode.empty_state.speech_permission_undetermined.title" = "Speech Recognition";

/* Listening mode empty state title for when listening has began but no responses have been displayed yet */
"listening_mode.empty_state.actively_listening.title" = "Listening...";

/* Listen mode empty state title for when no responses could be generated */
"listening_mode.empty_state.free_response.title" = "Sounds complicated";

/* Listen mode error state title for when Apple's speech to text service is unavailable */
"listening_mode.empty_state.speech_unavailable.title" = "Speech services unavailable";



// MARK: Listening Mode Empty State Messages

/* Listening mode empty state message for when microphone permissions are required, but the user has denied them */
"listening_mode.empty_state.microphone_permission_denied.message" = "Vocable needs to use the microphone to enable Listening Mode. Please enable microphone access in the system Settings app.\n\nYou can also disable Listening Mode to hide this category in Vocable's settings.";

/* Listening mode empty state message for when microphone permissions are required and the user has not been shown the system permissions prompt yet */
"listening_mode.empty_state.microphone_permission_undetermined.message" = "Vocable needs microphone access to enable Listening Mode. The button below presents an iOS permission dialog that Vocable's head tracking cannot interract with.";

/* Listening mode empty state message for when speech recognition permissions are required, but the user has denied them */
"listening_mode.empty_state.speech_permission_denied.message" = "Vocable needs speech recognition to enable Listening Mode. Please enable speech recognition in the system Settings app.\n\nYou can also disable Listening Mode to hide this category in Vocable's settings.";

/* Listening mode empty state message for when speech recognition permissions are required and the user has not been shown the system permissions prompt yet */
"listening_mode.empty_state.speech_permission_undetermined.message" = "Vocable needs to request speech permissions to enable Listening Mode. This will present an iOS permission dialog that Vocable's head tracking cannot interract with.";

/* Listening mode empty state message for when listening has began but no responses have been displayed yet */
"listening_mode.empty_state.actively_listening.message" = "When someone asks a question out loud, Vocable will offer quick response options.";

/* Listen mode empty state message for when no responses could be generated */
"listening_mode.empty_state.free_response.message" = "Not sure what to suggest. Please use the keyboard or select an existing phrase to reply.";

/* Listen mode error state message for when Apple's speech to text service is unavailable */
"listening_mode.empty_state.speech_unavailable.message" = "Please try again later";



// MARK: Listening Mode Empty State Button Titles

/* Listen mode empty state action that will allow the user to open the Settings app in order to grant microphone permissions. */
"listening_mode.empty_state.microphone_permission_denied.action" = "Open Settings";

/* Listen mode empty state action that will allow the user to grant access to microphone permissions via the system permissions alert. */
"listening_mode.empty_state.microphone_permission_undetermined.action" = "Grant Access";

/* Listen mode empty state action that will allow the user to open the Settings app in order to grant speech recognition permissions. */
"listening_mode.empty_state.speech_permission_denied.action" = "Open Settings";

/* Listen mode empty state action that will allow the user to grant access to speech recognition permissions via the system permissions alert. */
"listening_mode.empty_state.speech_permission_undetermined.action" = "Grant Access";


// MARK: Listening Mode Empty State Titles

/* Share with Developer button.  The button appears if Listen mode could not generate a reponese. */
"listening_mode.feedback.submit.title" = "Share with Developers";

/* Information text around what the Share with Deeveloper button does.*/
"listening_mode.feedback.hint.text" = "Don’t like these responses? Anonymously share this question to help improve listening mode.";

/* Thank you confirmation.  This text appears after sharing with developer*/
"listening_mode.feedback.confirmation.title" = "Thank You!";
